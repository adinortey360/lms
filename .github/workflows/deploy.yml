name: Deploy Load Balancer Container to Server

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the repository
    - name: Checkout repository
      uses: actions/checkout@v3

    # Step 2: Set up SSH key
    - name: Set up SSH key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa

    # Step 3: Add server to known_hosts
    - name: Add server to known_hosts
      run: |
        ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts

    # Step 4: Build the Docker image
    - name: Build Docker Image
      run: |
        docker build -t load-balancer-image .

    # Step 5: Save the Docker image as a tar file for transfer
    - name: Save Docker image to file
      run: |
        docker save -o load-balancer-image.tar load-balancer-image

    # Step 6: Copy the Docker image to the remote server
    - name: Copy Docker image to server
      run: |
        scp -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no -P ${{ secrets.SERVER_PORT }} load-balancer-image.tar ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}:/tmp/load-balancer-image.tar

    # Step 7: Load the Docker image on the remote server and run it
    - name: Deploy Docker image on the server
      run: |
        ssh -t -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no -p ${{ secrets.SERVER_PORT }} ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} << 'EOF'
          # Remove the existing Docker image if it exists
          if sudo docker images | grep -q "load-balancer-image"; then
            sudo docker rmi -f load-balancer-image:latest || true
          fi
          # Load the new Docker image
          sudo docker load -i /tmp/load-balancer-image.tar
          # Stop and remove the existing container if it exists
          sudo docker stop load-balancer-container || true
          sudo docker rm load-balancer-container || true
          # Run the new container
          sudo docker run -d --name load-balancer-container -p 8080:8080 load-balancer-image
          # Clean up by removing the transferred image tar file
          rm /tmp/load-balancer-image.tar
        EOF
